{"ast":null,"code":"var _jsxFileName = \"/Users/kushagrapathak/Documents/Web Projs/LetsHPC/letshpcjs/packages/app/src/pages/SSH/Boxes.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport { red } from '@material-ui/core/colors';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: '100%'\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%' // 16:9\n\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)'\n  },\n  avatar: {\n    backgroundColor: red[500]\n  }\n}));\nexport default function RecipeReviewCard({\n  OS\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(true);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      action: /*#__PURE__*/_jsxDEV(IconButton, {\n        className: clsx(classes.expand, {\n          [classes.expandOpen]: expanded\n        }),\n        onClick: handleExpandClick,\n        \"aria-expanded\": expanded,\n        \"aria-label\": \"show more\",\n        children: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 6\n      }, this),\n      title: OS === 'windows' ? 'Activation of OpenMP' : OS === 'mac' ? 'Installation of Brew and OpenMP' : 'Installation of OpenMP',\n      subheader: OS === 'windows' ? 'On Windows (One Time Setup)' : OS === 'mac' ? 'On a Mac (One Time Setup)' : 'On Linux (One Time Setup)'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n      in: expanded,\n      timeout: \"auto\",\n      unmountOnExit: true,\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: OS === 'windows' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: '10px 0'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Prerequisite\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 9\n            }, this), \" : MinGW Installer(If it's not installed then first install it and don't forget to add its path globally in System Environment variables)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: '10px 0'\n            },\n            children: \"Activate Open MP Library by typing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"code\",\n            children: [\"mingw-get upgrade --recursive \\\"gcc\", '<', \"4.7.*\\\" \\\"gcc-g++\", '<', \"4.7.*\\\"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true) : OS === 'mac' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: '10px 0'\n            },\n            children: \"Install brew on your system by typing the following command on ssh* (Ignore if already installed)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"code\",\n            children: \"$ /bin/bash -c \\\"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)\\\"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: '10px 0'\n            },\n            children: \"Install Open MP Library by typing* (Ignore if already installed)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"code\",\n            children: \"$ brew install libomp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: '10px 0'\n            },\n            children: \"Install Open MP Library by typing (Ignore if already installed)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"code\",\n            children: \"$ sudo apt-get install libomp-dev\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }, this);\n}\n\n_s(RecipeReviewCard, \"Tgb3i3enhor7vD3P7Ke9Yho4NAM=\", false, function () {\n  return [useStyles];\n});\n\n_c = RecipeReviewCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeReviewCard\");","map":{"version":3,"sources":["/Users/kushagrapathak/Documents/Web Projs/LetsHPC/letshpcjs/packages/app/src/pages/SSH/Boxes.js"],"names":["React","makeStyles","clsx","Card","CardHeader","CardContent","Collapse","IconButton","red","ExpandMoreIcon","useStyles","theme","root","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","RecipeReviewCard","OS","classes","expanded","setExpanded","useState","handleExpandClick","margin"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent'\nimport Collapse from '@material-ui/core/Collapse'\nimport IconButton from '@material-ui/core/IconButton'\nimport { red } from '@material-ui/core/colors'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tmaxWidth: '100%'\n\t},\n\tmedia: {\n\t\theight: 0,\n\t\tpaddingTop: '56.25%' // 16:9\n\t},\n\texpand: {\n\t\ttransform: 'rotate(0deg)',\n\t\tmarginLeft: 'auto',\n\t\ttransition: theme.transitions.create('transform', {\n\t\t\tduration: theme.transitions.duration.shortest\n\t\t})\n\t},\n\texpandOpen: {\n\t\ttransform: 'rotate(180deg)'\n\t},\n\tavatar: {\n\t\tbackgroundColor: red[500]\n\t}\n}))\n\nexport default function RecipeReviewCard({ OS }) {\n\tconst classes = useStyles()\n\tconst [expanded, setExpanded] = React.useState(true)\n\n\tconst handleExpandClick = () => {\n\t\tsetExpanded(!expanded)\n\t}\n\n\treturn (\n\t\t<Card className={classes.root}>\n\t\t\t<CardHeader\n\t\t\t\taction={\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tclassName={clsx(classes.expand, {\n\t\t\t\t\t\t\t[classes.expandOpen]: expanded\n\t\t\t\t\t\t})}\n\t\t\t\t\t\tonClick={handleExpandClick}\n\t\t\t\t\t\taria-expanded={expanded}\n\t\t\t\t\t\taria-label='show more'\n\t\t\t\t\t>\n\t\t\t\t\t\t<ExpandMoreIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t}\n\t\t\t\ttitle={\n\t\t\t\t\tOS === 'windows'\n\t\t\t\t\t\t? 'Activation of OpenMP'\n\t\t\t\t\t\t: OS === 'mac'\n\t\t\t\t\t\t? 'Installation of Brew and OpenMP'\n\t\t\t\t\t\t: 'Installation of OpenMP'\n\t\t\t\t}\n\t\t\t\tsubheader={\n\t\t\t\t\tOS === 'windows'\n\t\t\t\t\t\t? 'On Windows (One Time Setup)'\n\t\t\t\t\t\t: OS === 'mac'\n\t\t\t\t\t\t? 'On a Mac (One Time Setup)'\n\t\t\t\t\t\t: 'On Linux (One Time Setup)'\n\t\t\t\t}\n\t\t\t/>\n\t\t\t<Collapse in={expanded} timeout='auto' unmountOnExit>\n\t\t\t\t<CardContent>\n\t\t\t\t\t{OS === 'windows' ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<p style={{ margin: '10px 0' }}>\n\t\t\t\t\t\t\t\t<b>Prerequisite</b> : MinGW Installer(If it's not installed then\n\t\t\t\t\t\t\t\tfirst install it and don't forget to add its path globally in\n\t\t\t\t\t\t\t\tSystem Environment variables)\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p style={{ margin: '10px 0' }}>\n\t\t\t\t\t\t\t\tActivate Open MP Library by typing\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<div className='code'>\n\t\t\t\t\t\t\t\t{/* <FileCopyIcon fontSize=\"small\" style={{position:\"absolute\",top:\"10px\",left:\"96%\"}}/> */}\n\t\t\t\t\t\t\t\tmingw-get upgrade --recursive \"gcc{'<'}4.7.*\" \"gcc-g++{'<'}\n\t\t\t\t\t\t\t\t4.7.*\"\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : OS === 'mac' ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<p style={{ margin: '10px 0' }}>\n\t\t\t\t\t\t\t\tInstall brew on your system by typing the following command on\n\t\t\t\t\t\t\t\tssh* (Ignore if already installed)\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<div className='code'>\n\t\t\t\t\t\t\t\t{/* <FileCopyIcon fontSize=\"small\" style={{ position: \"absolute\", top: \"10px\", left: \"96%\" }} /> */}\n\t\t\t\t\t\t\t\t$ /bin/bash -c \"$(curl -fsSL\n\t\t\t\t\t\t\t\thttps://raw.githubusercontent.com/Homebrew/install/master/install.sh)\"\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<p style={{ margin: '10px 0' }}>\n\t\t\t\t\t\t\t\tInstall Open MP Library by typing* (Ignore if already installed)\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<div className='code'>\n\t\t\t\t\t\t\t\t{/* <FileCopyIcon fontSize=\"small\" style={{ position: \"absolute\", top: \"10px\", left: \"96%\" }} /> */}\n\t\t\t\t\t\t\t\t$ brew install libomp\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<p style={{ margin: '10px 0' }}>\n\t\t\t\t\t\t\t\tInstall Open MP Library by typing (Ignore if already installed)\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<div className='code'>\n\t\t\t\t\t\t\t\t{/* <FileCopyIcon fontSize=\"small\" style={{position:\"absolute\",top:\"10px\",left:\"96%\"}}/> */}\n\t\t\t\t\t\t\t\t$ sudo apt-get install libomp-dev\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</CardContent>\n\t\t\t</Collapse>\n\t\t</Card>\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}