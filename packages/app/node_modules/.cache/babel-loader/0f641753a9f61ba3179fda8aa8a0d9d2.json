{"ast":null,"code":"var _jsxFileName = \"/Users/kushagrapathak/Documents/Web Projs/LetsHPC/letshpcjs/packages/app/src/pages/Dashboard/DataVisualisationPage/DataVisualisationPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport CSVReader from 'react-csv-reader';\nimport ModalWrapper from '../../../components/Modal/ModalWrapper';\nimport { Close } from '@material-ui/icons';\nimport './DataVisualisationPage.css';\nimport { IconButton, MenuItem, Select, makeStyles, Button, CircularProgress } from '@material-ui/core';\nimport LineGraph from './LineGraph';\nimport _map from 'lodash/map';\nimport { restructureData } from '../../../utils/graph-utils';\nimport { updateUserProfile } from '../../../services/services';\nimport { useDispatch } from 'react-redux';\nimport { setUser } from '../../../slices/userSlice';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useSelectStyles = makeStyles(() => ({\n  root: {\n    color: 'white'\n  },\n  icon: {\n    color: 'white'\n  }\n}));\nconst useMenuStyles = makeStyles(() => ({\n  paper: {\n    backgroundColor: '#1a1e22',\n    color: 'lightgray'\n  }\n}));\n\nfunction DataVisualisationPage({\n  user\n}) {\n  _s();\n\n  const selectClasses = useSelectStyles();\n  const selectMenu = useMenuStyles();\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(0);\n  const [addLoading, setAddLoading] = useState(false);\n  const [graphSnapshot, setSnapshot] = useState(null);\n  const [preference, setPreference] = useState(1);\n  const [dataset, setDataset] = React.useState(null);\n  const [graphData, setData] = React.useState(null);\n  const [modalState, setModalState] = useState(false);\n\n  const notify = () => {\n    toast.success('Graph added to your collection !', {\n      position: toast.POSITION.TOP_RIGHT\n    });\n  };\n\n  const generateGraph = React.useCallback(() => {\n    setLoading(() => 1);\n    const restructuredData = restructureData(dataset, preference);\n    setData(() => restructuredData);\n    setLoading(() => 2);\n  }, [dataset, setLoading, preference]);\n  const onClickUpload = React.useCallback((data, fileInfo) => {\n    setDataset({\n      data: data,\n      info: fileInfo\n    });\n    setModalState(() => true);\n  }, [setDataset, setModalState]);\n  const addToCollection = React.useCallback(async () => {\n    setAddLoading(true);\n    const {\n      savedPlots\n    } = user;\n    const updatedImages = [...savedPlots, {\n      imageURL: graphSnapshot,\n      createDate: Date.now()\n    }];\n    const updatedUser = { ...user,\n      savedPlots: updatedImages\n    };\n    await updateUserProfile(updatedUser);\n    dispatch(setUser({\n      user: updatedUser\n    }));\n    setAddLoading(false);\n    notify();\n  }, [dispatch, user, graphSnapshot, setAddLoading]);\n\n  const onClose = () => {\n    setModalState(false);\n    setDataset(null);\n    setLoading(0);\n    setData(null);\n    setSnapshot(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to Data Visualisation page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tutorial__list\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Report_Boxes\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Upload Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(CSVReader, {\n          label: 'Upload data as CSV',\n          accept: 'text/csv',\n          onFileLoaded: onClickUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Collection of Plots\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"plots__dashboard\",\n      children: [_map(user === null || user === void 0 ? void 0 : user.savedPlots, (item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plot\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"background-chart\",\n          style: {\n            backgroundColor: 'white'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.imageURL,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Figure \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: new Date(item.createDate).toString().slice(0, 24)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 7\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 6\n      }, this)), /*#__PURE__*/_jsxDEV(ModalWrapper, {\n        openModal: modalState,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'graph-options',\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'options-head',\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Choose a function to visualise\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              className: \"close-modal\",\n              onClick: onClose,\n              children: /*#__PURE__*/_jsxDEV(Close, {\n                className: \"close-modal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"File name : \", dataset === null || dataset === void 0 ? void 0 : dataset.info.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 10,\n              width: '100%',\n              display: 'flex'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Select, {\n              fullWidth: true,\n              classes: selectClasses,\n              label: \"Function\",\n              variant: \"outlined\",\n              MenuProps: {\n                classes: selectMenu\n              },\n              defaultValue: 1,\n              onChange: ({\n                target: {\n                  value\n                }\n              }) => setPreference(value),\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 1,\n                children: \"Fx(1)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 2,\n                children: \"Fx(2)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 3,\n                children: \"Fx(3)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              id: \"generate\",\n              onClick: generateGraph,\n              children: \"Generate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'graph-area',\n            children: loading === 1 ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              style: {\n                margin: 'auto',\n                color: 'white'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 9\n            }, this) : loading === 2 ? /*#__PURE__*/_jsxDEV(LineGraph, {\n              dataset: graphData,\n              setImage: setSnapshot\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 9\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 7\n          }, this), loading === 2 && /*#__PURE__*/_jsxDEV(Button, {\n            id: \"collectionButton\",\n            onClick: addToCollection,\n            disabled: graphSnapshot === null,\n            children: graphSnapshot === null || addLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              style: {\n                margin: 'auto',\n                color: 'white'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 10\n            }, this) : 'Add to your collection'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 3\n  }, this);\n}\n\n_s(DataVisualisationPage, \"Pfa37DwuZALM8z/LQgoM+cHB5qQ=\", false, function () {\n  return [useSelectStyles, useMenuStyles, useDispatch];\n});\n\n_c = DataVisualisationPage;\nexport default DataVisualisationPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataVisualisationPage\");","map":{"version":3,"sources":["/Users/kushagrapathak/Documents/Web Projs/LetsHPC/letshpcjs/packages/app/src/pages/Dashboard/DataVisualisationPage/DataVisualisationPage.jsx"],"names":["React","useState","CSVReader","ModalWrapper","Close","IconButton","MenuItem","Select","makeStyles","Button","CircularProgress","LineGraph","_map","restructureData","updateUserProfile","useDispatch","setUser","ToastContainer","toast","useSelectStyles","root","color","icon","useMenuStyles","paper","backgroundColor","DataVisualisationPage","user","selectClasses","selectMenu","dispatch","loading","setLoading","addLoading","setAddLoading","graphSnapshot","setSnapshot","preference","setPreference","dataset","setDataset","graphData","setData","modalState","setModalState","notify","success","position","POSITION","TOP_RIGHT","generateGraph","useCallback","restructuredData","onClickUpload","data","fileInfo","info","addToCollection","savedPlots","updatedImages","imageURL","createDate","Date","now","updatedUser","onClose","item","index","toString","slice","name","marginTop","width","display","classes","target","value","margin"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport CSVReader from 'react-csv-reader'\nimport ModalWrapper from '../../../components/Modal/ModalWrapper'\nimport { Close } from '@material-ui/icons'\nimport './DataVisualisationPage.css'\nimport {\n\tIconButton,\n\tMenuItem,\n\tSelect,\n\tmakeStyles,\n\tButton,\n\tCircularProgress\n} from '@material-ui/core'\nimport LineGraph from './LineGraph'\nimport _map from 'lodash/map'\nimport { restructureData } from '../../../utils/graph-utils'\nimport { updateUserProfile } from '../../../services/services'\nimport { useDispatch } from 'react-redux'\nimport { setUser } from '../../../slices/userSlice'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nconst useSelectStyles = makeStyles(() => ({\n\troot: {\n\t\tcolor: 'white'\n\t},\n\ticon: {\n\t\tcolor: 'white'\n\t}\n}))\nconst useMenuStyles = makeStyles(() => ({\n\tpaper: {\n\t\tbackgroundColor: '#1a1e22',\n\t\tcolor: 'lightgray'\n\t}\n}))\n\nfunction DataVisualisationPage({ user }) {\n\tconst selectClasses = useSelectStyles()\n\tconst selectMenu = useMenuStyles()\n\tconst dispatch = useDispatch()\n\tconst [loading, setLoading] = useState(0)\n\tconst [addLoading, setAddLoading] = useState(false)\n\tconst [graphSnapshot, setSnapshot] = useState(null)\n\tconst [preference, setPreference] = useState(1)\n\tconst [dataset, setDataset] = React.useState(null)\n\tconst [graphData, setData] = React.useState(null)\n\tconst [modalState, setModalState] = useState(false)\n\n\tconst notify = () => {\n\t\ttoast.success('Graph added to your collection !', {\n\t\t\tposition: toast.POSITION.TOP_RIGHT\n\t\t})\n\t}\n\n\tconst generateGraph = React.useCallback(() => {\n\t\tsetLoading(() => 1)\n\t\tconst restructuredData = restructureData(dataset, preference)\n\t\tsetData(() => restructuredData)\n\t\tsetLoading(() => 2)\n\t}, [dataset, setLoading, preference])\n\n\tconst onClickUpload = React.useCallback(\n\t\t(data, fileInfo) => {\n\t\t\tsetDataset({ data: data, info: fileInfo })\n\t\t\tsetModalState(() => true)\n\t\t},\n\t\t[setDataset, setModalState]\n\t)\n\n\tconst addToCollection = React.useCallback(async () => {\n\t\tsetAddLoading(true)\n\t\tconst { savedPlots } = user\n\t\tconst updatedImages = [\n\t\t\t...savedPlots,\n\t\t\t{ imageURL: graphSnapshot, createDate: Date.now() }\n\t\t]\n\t\tconst updatedUser = { ...user, savedPlots: updatedImages }\n\t\tawait updateUserProfile(updatedUser)\n\t\tdispatch(setUser({ user: updatedUser }))\n\t\tsetAddLoading(false)\n\t\tnotify()\n\t}, [dispatch, user, graphSnapshot, setAddLoading])\n\n\tconst onClose = () => {\n\t\tsetModalState(false)\n\t\tsetDataset(null)\n\t\tsetLoading(0)\n\t\tsetData(null)\n\t\tsetSnapshot(null)\n\t}\n\n\treturn (\n\t\t<div className='page'>\n\t\t\t<h1>Welcome to Data Visualisation page</h1>\n\t\t\t<div className='tutorial__list'>\n\t\t\t\t<div className='Report_Boxes'>\n\t\t\t\t\t<h2>Upload Data</h2>\n\t\t\t\t\t<CSVReader\n\t\t\t\t\t\tlabel={'Upload data as CSV'}\n\t\t\t\t\t\taccept={'text/csv'}\n\t\t\t\t\t\tonFileLoaded={onClickUpload}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<h2>Your Collection of Plots</h2>\n\t\t\t<div className='plots__dashboard'>\n\t\t\t\t{_map(user?.savedPlots, (item, index) => (\n\t\t\t\t\t<div key={index} className='plot'>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName='background-chart'\n\t\t\t\t\t\t\tstyle={{ backgroundColor: 'white' }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<img src={item.imageURL} alt='' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<h2>Figure {index + 1}</h2>\n\t\t\t\t\t\t<p>{new Date(item.createDate).toString().slice(0, 24)}</p>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t\t<ModalWrapper openModal={modalState}>\n\t\t\t\t\t<div className={'graph-options'}>\n\t\t\t\t\t\t<div className={'options-head'}>\n\t\t\t\t\t\t\t<h2>Choose a function to visualise</h2>\n\t\t\t\t\t\t\t<IconButton className='close-modal' onClick={onClose}>\n\t\t\t\t\t\t\t\t<Close className='close-modal' />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<h3>File name : {dataset?.info.name}</h3>\n\t\t\t\t\t\t<div style={{ marginTop: 10, width: '100%', display: 'flex' }}>\n\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tclasses={selectClasses}\n\t\t\t\t\t\t\t\tlabel='Function'\n\t\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\t\tMenuProps={{ classes: selectMenu }}\n\t\t\t\t\t\t\t\tdefaultValue={1}\n\t\t\t\t\t\t\t\tonChange={({ target: { value } }) => setPreference(value)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<MenuItem value={1}>Fx(1)</MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem value={2}>Fx(2)</MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem value={3}>Fx(3)</MenuItem>\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t<Button id='generate' onClick={generateGraph}>\n\t\t\t\t\t\t\t\tGenerate\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={'graph-area'}>\n\t\t\t\t\t\t\t{loading === 1 ? (\n\t\t\t\t\t\t\t\t<CircularProgress style={{ margin: 'auto', color: 'white' }} />\n\t\t\t\t\t\t\t) : loading === 2 ? (\n\t\t\t\t\t\t\t\t<LineGraph dataset={graphData} setImage={setSnapshot} />\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{loading === 2 && (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tid='collectionButton'\n\t\t\t\t\t\t\t\tonClick={addToCollection}\n\t\t\t\t\t\t\t\tdisabled={graphSnapshot === null}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{graphSnapshot === null || addLoading ? (\n\t\t\t\t\t\t\t\t\t<CircularProgress\n\t\t\t\t\t\t\t\t\t\tstyle={{ margin: 'auto', color: 'white' }}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t'Add to your collection'\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</ModalWrapper>\n\t\t\t</div>\n\t\t\t<ToastContainer />\n\t\t</div>\n\t)\n}\n\nexport default DataVisualisationPage\n"]},"metadata":{},"sourceType":"module"}