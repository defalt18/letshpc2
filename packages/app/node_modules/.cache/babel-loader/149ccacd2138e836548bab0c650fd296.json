{"ast":null,"code":"var _jsxFileName = \"/Users/kushagrapathak/Documents/Web Projs/LetsHPC/letshpcjs/packages/app/src/pages/Tutorial/Tutorial.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from 'react';\nimport './tut.css';\nimport Button from '@material-ui/core/Button';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Chip from '@material-ui/core/Chip';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { IconButton } from '@material-ui/core';\nimport SshModal from 'components/Modal/SshModal';\nimport { useHistory } from 'react-router-dom';\nimport DoneAllRoundedIcon from '@material-ui/icons/DoneAllRounded';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport _find from 'lodash/find';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport { updateUserProfile, useUser } from 'services/services';\nimport { useDispatch } from 'react-redux';\nimport { setUser } from 'slices/userSlice';\nimport { Tutorial_Default } from 'types/data_types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst chipColor = {\n  beginner: 'green',\n  medium: 'yellow',\n  advance: '#eb4034'\n};\n\nfunction Tutorial(props) {\n  _s();\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const user = useUser();\n  const {\n    state = {\n      details: null\n    }\n  } = props.location;\n  const tutorialDetails = JSON.parse(state.details);\n  const {\n    code,\n    theory,\n    testcases,\n    title,\n    level\n  } = tutorialDetails || Tutorial_Default;\n  const [complete, setComplete] = useState(() => _find(user === null || user === void 0 ? void 0 : user.completedTutorials, {\n    tutorial: tutorialDetails\n  }));\n  const markComplete = useCallback(async () => {\n    const tutorialList = user.completedTutorials;\n    const updatedUser = { ...user,\n      completedTutorials: [...tutorialList, {\n        tutorial: tutorialDetails,\n        time: Date.now()\n      }]\n    };\n    await updateUserProfile(updatedUser);\n    dispatch(setUser({\n      user: updatedUser\n    }));\n    setComplete(true);\n    alert('Tutorial marked as completed');\n  }, [user, tutorialDetails, dispatch]);\n\n  const dangerousElement = (string = '', props) => /*#__PURE__*/_jsxDEV(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: `${string} ${props}`\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 3\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tutorials__page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tut__head\",\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: () => history.goBack(),\n        \"aria-label\": \"back\",\n        style: {\n          color: 'white'\n        },\n        children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Chip, {\n        variant: \"outlined\",\n        size: \"small\",\n        label: level[0].toUpperCase() + level.slice(1),\n        style: {\n          color: chipColor[level],\n          borderColor: chipColor[level]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this), user ? !complete ? /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Mark as completed\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: markComplete,\n          style: {\n            marginLeft: 'auto',\n            color: 'rgb(0,200,150)'\n          },\n          children: /*#__PURE__*/_jsxDEV(DoneAllRoundedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this) : /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Tutorial marked as completed\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          style: {\n            marginLeft: 'auto',\n            color: 'rgb(0,150,250)'\n          },\n          children: /*#__PURE__*/_jsxDEV(AssignmentTurnedInIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__window\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"# \", title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topic__desc\",\n        children: dangerousElement(theory)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"codeboxes\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"samp\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              color: 'white'\n            },\n            children: \"> Sample Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            style: {\n              position: 'absolute',\n              right: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                document.getElementById('output').style.display = 'block';\n              },\n              style: {\n                textTransform: 'capitalize',\n                background: 'darkgreen',\n                color: 'white',\n                margin: '0'\n              },\n              children: \"Run\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                textTransform: 'capitalize',\n                background: 'black',\n                padding: 0,\n                color: 'white',\n                margin: '0'\n              },\n              children: /*#__PURE__*/_jsxDEV(SshModal, {\n                background: \"black\",\n                textcolor: \"white\",\n                OS: \"mac\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 6\n        }, this), dangerousElement(code)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"output\",\n        className: \"codeboxes\",\n        style: {\n          display: 'none',\n          margin: '20px 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: 'white',\n            margin: '10px 0'\n          },\n          children: \"Output\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 6\n        }, this), testcases && testcases.map(item => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [dangerousElement('Input', item.input), dangerousElement('Output', item.output)]\n        }, void 0, true))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topic__desc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Tutorial, \"cyrPDwsdjCQ8HmeZYBKpYmZg8wg=\", false, function () {\n  return [useHistory, useDispatch, useUser];\n});\n\n_c = Tutorial;\nexport default _c2 = /*#__PURE__*/React.memo(Tutorial);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Tutorial\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/kushagrapathak/Documents/Web Projs/LetsHPC/letshpcjs/packages/app/src/pages/Tutorial/Tutorial.js"],"names":["React","useCallback","useState","Button","ArrowBackIcon","Chip","ButtonGroup","IconButton","SshModal","useHistory","DoneAllRoundedIcon","Tooltip","_find","AssignmentTurnedInIcon","updateUserProfile","useUser","useDispatch","setUser","Tutorial_Default","chipColor","beginner","medium","advance","Tutorial","props","history","dispatch","user","state","details","location","tutorialDetails","JSON","parse","code","theory","testcases","title","level","complete","setComplete","completedTutorials","tutorial","markComplete","tutorialList","updatedUser","time","Date","now","alert","dangerousElement","string","__html","goBack","color","toUpperCase","slice","borderColor","marginLeft","position","right","document","getElementById","style","display","textTransform","background","margin","padding","map","item","input","output","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,sBAAP,MAAmC,uCAAnC;AACA,SAASC,iBAAT,EAA4BC,OAA5B,QAA2C,mBAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,gBAAT,QAAiC,kBAAjC;;;AAEA,MAAMC,SAAS,GAAG;AACjBC,EAAAA,QAAQ,EAAE,OADO;AAEjBC,EAAAA,MAAM,EAAE,QAFS;AAGjBC,EAAAA,OAAO,EAAE;AAHQ,CAAlB;;AAMA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACxB,QAAMC,OAAO,GAAGhB,UAAU,EAA1B;AACA,QAAMiB,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAMW,IAAI,GAAGZ,OAAO,EAApB;AAEA,QAAM;AAAEa,IAAAA,KAAK,GAAG;AAAEC,MAAAA,OAAO,EAAE;AAAX;AAAV,MAAgCL,KAAK,CAACM,QAA5C;AACA,QAAMC,eAAe,GAAGC,IAAI,CAACC,KAAL,CAAWL,KAAK,CAACC,OAAjB,CAAxB;AACA,QAAM;AAAEK,IAAAA,IAAF;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA,SAAhB;AAA2BC,IAAAA,KAA3B;AAAkCC,IAAAA;AAAlC,MACLP,eAAe,IAAIb,gBADpB;AAGA,QAAM,CAACqB,QAAD,EAAWC,WAAX,IAA0BtC,QAAQ,CAAC,MACxCU,KAAK,CAACe,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEc,kBAAP,EAA2B;AAAEC,IAAAA,QAAQ,EAAEX;AAAZ,GAA3B,CADkC,CAAxC;AAIA,QAAMY,YAAY,GAAG1C,WAAW,CAAC,YAAY;AAC5C,UAAM2C,YAAY,GAAGjB,IAAI,CAACc,kBAA1B;AACA,UAAMI,WAAW,GAAG,EACnB,GAAGlB,IADgB;AAEnBc,MAAAA,kBAAkB,EAAE,CACnB,GAAGG,YADgB,EAEnB;AAAEF,QAAAA,QAAQ,EAAEX,eAAZ;AAA6Be,QAAAA,IAAI,EAAEC,IAAI,CAACC,GAAL;AAAnC,OAFmB;AAFD,KAApB;AAOA,UAAMlC,iBAAiB,CAAC+B,WAAD,CAAvB;AACAnB,IAAAA,QAAQ,CAACT,OAAO,CAAC;AAAEU,MAAAA,IAAI,EAAEkB;AAAR,KAAD,CAAR,CAAR;AACAL,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAS,IAAAA,KAAK,CAAC,8BAAD,CAAL;AACA,GAb+B,EAa7B,CAACtB,IAAD,EAAOI,eAAP,EAAwBL,QAAxB,CAb6B,CAAhC;;AAeA,QAAMwB,gBAAgB,GAAG,CAACC,MAAM,GAAG,EAAV,EAAc3B,KAAd,kBACxB;AAAM,IAAA,uBAAuB,EAAE;AAAE4B,MAAAA,MAAM,EAAG,GAAED,MAAO,IAAG3B,KAAM;AAA7B;AAA/B;AAAA;AAAA;AAAA;AAAA,UADD;;AAGA,sBACC;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACC,QAAC,UAAD;AACC,QAAA,OAAO,EAAE,MAAMC,OAAO,CAAC4B,MAAR,EADhB;AAEC,sBAAW,MAFZ;AAGC,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAHR;AAAA,+BAKC,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AALD;AAAA;AAAA;AAAA;AAAA,cADD,eAQC;AAAA,kBAAKjB;AAAL;AAAA;AAAA;AAAA;AAAA,cARD,eASC,QAAC,IAAD;AACC,QAAA,OAAO,EAAC,UADT;AAEC,QAAA,IAAI,EAAC,OAFN;AAGC,QAAA,KAAK,EAAEC,KAAK,CAAC,CAAD,CAAL,CAASiB,WAAT,KAAyBjB,KAAK,CAACkB,KAAN,CAAY,CAAZ,CAHjC;AAIC,QAAA,KAAK,EAAE;AAAEF,UAAAA,KAAK,EAAEnC,SAAS,CAACmB,KAAD,CAAlB;AAA2BmB,UAAAA,WAAW,EAAEtC,SAAS,CAACmB,KAAD;AAAjD;AAJR;AAAA;AAAA;AAAA;AAAA,cATD,EAeEX,IAAI,GACJ,CAACY,QAAD,gBACC,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,mBAAf;AAAA,+BACC,QAAC,UAAD;AACC,UAAA,OAAO,EAAEI,YADV;AAEC,UAAA,KAAK,EAAE;AAAEe,YAAAA,UAAU,EAAE,MAAd;AAAsBJ,YAAAA,KAAK,EAAE;AAA7B,WAFR;AAAA,iCAIC,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAJD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADD,gBAUC,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,8BAAf;AAAA,+BACC,QAAC,UAAD;AACC,UAAA,KAAK,EAAE;AAAEI,YAAAA,UAAU,EAAE,MAAd;AAAsBJ,YAAAA,KAAK,EAAE;AAA7B,WADR;AAAA,iCAGC,QAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAHD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAXG,GAmBD,IAlCL;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAqCC;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACC;AAAA,yBAAOjB,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,kBAEEa,gBAAgB,CAACf,MAAD;AAFlB;AAAA;AAAA;AAAA;AAAA,cAFD,eAQC;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACC;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,kCACC;AAAI,YAAA,KAAK,EAAE;AAAEmB,cAAAA,KAAK,EAAE;AAAT,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,eAEC,QAAC,WAAD;AAAa,YAAA,KAAK,EAAE;AAAEK,cAAAA,QAAQ,EAAE,UAAZ;AAAwBC,cAAAA,KAAK,EAAE;AAA/B,aAApB;AAAA,oCACC,QAAC,MAAD;AACC,cAAA,OAAO,EAAE,MAAM;AACdC,gBAAAA,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,KAAlC,CAAwCC,OAAxC,GAAkD,OAAlD;AACA,eAHF;AAIC,cAAA,KAAK,EAAE;AACNC,gBAAAA,aAAa,EAAE,YADT;AAENC,gBAAAA,UAAU,EAAE,WAFN;AAGNZ,gBAAAA,KAAK,EAAE,OAHD;AAINa,gBAAAA,MAAM,EAAE;AAJF,eAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,eAcC,QAAC,MAAD;AACC,cAAA,KAAK,EAAE;AACNF,gBAAAA,aAAa,EAAE,YADT;AAENC,gBAAAA,UAAU,EAAE,OAFN;AAGNE,gBAAAA,OAAO,EAAE,CAHH;AAINd,gBAAAA,KAAK,EAAE,OAJD;AAKNa,gBAAAA,MAAM,EAAE;AALF,eADR;AAAA,qCASC,QAAC,QAAD;AAAU,gBAAA,UAAU,EAAC,OAArB;AAA6B,gBAAA,SAAS,EAAC,OAAvC;AAA+C,gBAAA,EAAE,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA;AATD;AAAA;AAAA;AAAA;AAAA,oBAdD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,EA+BEjB,gBAAgB,CAAChB,IAAD,CA/BlB;AAAA;AAAA;AAAA;AAAA;AAAA,cARD,eAyCC;AACC,QAAA,EAAE,EAAC,QADJ;AAEC,QAAA,SAAS,EAAC,WAFX;AAGC,QAAA,KAAK,EAAE;AAAE8B,UAAAA,OAAO,EAAE,MAAX;AAAmBG,UAAAA,MAAM,EAAE;AAA3B,SAHR;AAAA,gCAKC;AAAI,UAAA,KAAK,EAAE;AAAEb,YAAAA,KAAK,EAAE,OAAT;AAAkBa,YAAAA,MAAM,EAAE;AAA1B,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALD,EAME/B,SAAS,IACTA,SAAS,CAACiC,GAAV,CAAeC,IAAD,iBACb;AAAA,qBACEpB,gBAAgB,CAAC,OAAD,EAAUoB,IAAI,CAACC,KAAf,CADlB,EAEErB,gBAAgB,CAAC,QAAD,EAAWoB,IAAI,CAACE,MAAhB,CAFlB;AAAA,wBADD,CAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cAzCD,eAuDC;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAvDD;AAAA;AAAA;AAAA;AAAA;AAAA,YArCD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAiGA;;GAjIQjD,Q;UACQd,U,EACCO,W,EACJD,O;;;KAHLQ,Q;AAmIT,kCAAevB,KAAK,CAACyE,IAAN,CAAWlD,QAAX,CAAf","sourcesContent":["import React, { useCallback, useState } from 'react'\nimport './tut.css'\nimport Button from '@material-ui/core/Button'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport Chip from '@material-ui/core/Chip'\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\nimport { IconButton } from '@material-ui/core'\nimport SshModal from 'components/Modal/SshModal'\nimport { useHistory } from 'react-router-dom'\nimport DoneAllRoundedIcon from '@material-ui/icons/DoneAllRounded'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport _find from 'lodash/find'\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn'\nimport { updateUserProfile, useUser } from 'services/services'\nimport { useDispatch } from 'react-redux'\nimport { setUser } from 'slices/userSlice'\nimport { Tutorial_Default } from 'types/data_types'\n\nconst chipColor = {\n\tbeginner: 'green',\n\tmedium: 'yellow',\n\tadvance: '#eb4034'\n}\n\nfunction Tutorial(props) {\n\tconst history = useHistory()\n\tconst dispatch = useDispatch()\n\tconst user = useUser()\n\n\tconst { state = { details: null } } = props.location\n\tconst tutorialDetails = JSON.parse(state.details)\n\tconst { code, theory, testcases, title, level } =\n\t\ttutorialDetails || Tutorial_Default\n\n\tconst [complete, setComplete] = useState(() =>\n\t\t_find(user?.completedTutorials, { tutorial: tutorialDetails })\n\t)\n\n\tconst markComplete = useCallback(async () => {\n\t\tconst tutorialList = user.completedTutorials\n\t\tconst updatedUser = {\n\t\t\t...user,\n\t\t\tcompletedTutorials: [\n\t\t\t\t...tutorialList,\n\t\t\t\t{ tutorial: tutorialDetails, time: Date.now() }\n\t\t\t]\n\t\t}\n\t\tawait updateUserProfile(updatedUser)\n\t\tdispatch(setUser({ user: updatedUser }))\n\t\tsetComplete(true)\n\t\talert('Tutorial marked as completed')\n\t}, [user, tutorialDetails, dispatch])\n\n\tconst dangerousElement = (string = '', props) => (\n\t\t<span dangerouslySetInnerHTML={{ __html: `${string} ${props}` }}></span>\n\t)\n\treturn (\n\t\t<div className='tutorials__page'>\n\t\t\t<div className='tut__head'>\n\t\t\t\t<IconButton\n\t\t\t\t\tonClick={() => history.goBack()}\n\t\t\t\t\taria-label='back'\n\t\t\t\t\tstyle={{ color: 'white' }}\n\t\t\t\t>\n\t\t\t\t\t<ArrowBackIcon />\n\t\t\t\t</IconButton>\n\t\t\t\t<h2>{title}</h2>\n\t\t\t\t<Chip\n\t\t\t\t\tvariant='outlined'\n\t\t\t\t\tsize='small'\n\t\t\t\t\tlabel={level[0].toUpperCase() + level.slice(1)}\n\t\t\t\t\tstyle={{ color: chipColor[level], borderColor: chipColor[level] }}\n\t\t\t\t/>\n\t\t\t\t{user ? (\n\t\t\t\t\t!complete ? (\n\t\t\t\t\t\t<Tooltip title='Mark as completed'>\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tonClick={markComplete}\n\t\t\t\t\t\t\t\tstyle={{ marginLeft: 'auto', color: 'rgb(0,200,150)' }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<DoneAllRoundedIcon />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Tooltip title='Tutorial marked as completed'>\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tstyle={{ marginLeft: 'auto', color: 'rgb(0,150,250)' }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<AssignmentTurnedInIcon />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t)\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t\t<div className='content__window'>\n\t\t\t\t<h1># {title}</h1>\n\t\t\t\t<div className='topic__desc'>\n\t\t\t\t\t{/*<p dangerouslySetInnerHTML={{ __html: `${theory}` }}></p>*/}\n\t\t\t\t\t{dangerousElement(theory)}\n\t\t\t\t\t{/*<br />*/}\n\t\t\t\t\t{/*<br />*/}\n\t\t\t\t</div>\n\t\t\t\t<div className='codeboxes'>\n\t\t\t\t\t<div className='samp'>\n\t\t\t\t\t\t<h3 style={{ color: 'white' }}>> Sample Code</h3>\n\t\t\t\t\t\t<ButtonGroup style={{ position: 'absolute', right: '10px' }}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tdocument.getElementById('output').style.display = 'block'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\ttextTransform: 'capitalize',\n\t\t\t\t\t\t\t\t\tbackground: 'darkgreen',\n\t\t\t\t\t\t\t\t\tcolor: 'white',\n\t\t\t\t\t\t\t\t\tmargin: '0'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tRun\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\ttextTransform: 'capitalize',\n\t\t\t\t\t\t\t\t\tbackground: 'black',\n\t\t\t\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t\t\t\t\tcolor: 'white',\n\t\t\t\t\t\t\t\t\tmargin: '0'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<SshModal background='black' textcolor='white' OS='mac' />\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t</div>\n\t\t\t\t\t{/*<p dangerouslySetInnerHTML={{ __html: `${code}` }}>{code}</p>*/}\n\t\t\t\t\t{dangerousElement(code)}\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tid='output'\n\t\t\t\t\tclassName='codeboxes'\n\t\t\t\t\tstyle={{ display: 'none', margin: '20px 0' }}\n\t\t\t\t>\n\t\t\t\t\t<h3 style={{ color: 'white', margin: '10px 0' }}>Output</h3>\n\t\t\t\t\t{testcases &&\n\t\t\t\t\t\ttestcases.map((item) => (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{dangerousElement('Input', item.input)}\n\t\t\t\t\t\t\t\t{dangerousElement('Output', item.output)}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t<div className='topic__desc'></div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default React.memo(Tutorial)\n"]},"metadata":{},"sourceType":"module"}