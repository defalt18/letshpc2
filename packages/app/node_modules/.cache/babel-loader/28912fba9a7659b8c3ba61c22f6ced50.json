{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useSelector } from 'react-redux';\nimport { selectUser } from '../slices/userSlice';\nimport axios from 'axios';\nimport _reduce from 'lodash/reduce';\nconst BASE_URL = 'http://localhost:8000/api'; // const BASE_URL = 'http://192.168.1.16:8000/api'\n\nfunction validateEmail(email) {\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}\n\nexport const SignIn = async credentials => {\n  const {\n    userName,\n    password\n  } = credentials;\n  if (userName === '') return {\n    status: 'Please enter your username'\n  };\n  if (password === '') return {\n    status: 'Password is incorrect'\n  };\n  const result = await axios.post(`${BASE_URL}/signin`, credentials);\n  return {\n    user: result.data.user,\n    status: result.data.message\n  };\n};\n_c = SignIn;\nexport const Register = async details => {\n  const {\n    userName,\n    email,\n    firstName,\n    lastName,\n    password,\n    cpass\n  } = details;\n  if (userName === '') return {\n    status: 'Please enter a username'\n  };\n  if (firstName === '') return {\n    status: 'Please enter a first name'\n  };\n  if (lastName === '') return {\n    status: 'Please enter a last name'\n  };\n  if (email === '' || !validateEmail(email) || email.slice(9) !== '@daiict.ac.in') return {\n    status: 'Please enter valid DAIICT email'\n  };\n  if (password === '' && password.length < 6) return {\n    status: 'Password should at least be of 6 letters'\n  };\n  if (password !== cpass) return {\n    status: \"Confirm password and password don't match\"\n  };\n  const user = {\n    email: email,\n    firstName: firstName,\n    lastName: lastName,\n    userName: userName,\n    password: password\n  };\n  const result = await axios.post(`${BASE_URL}/signup`, user);\n  return {\n    user: result.data.user,\n    status: result.data.message\n  };\n};\n_c2 = Register;\nexport const updateUserProfile = async user => {\n  return await axios.post(`${BASE_URL}/updateProfile`, user);\n};\nexport const fetchTutorialByIds = async tutorialIds => {\n  let data = [];\n  return await _reduce(tutorialIds, async (_, id) => {\n    const newTutorial = await axios.get(`${BASE_URL}/tutorial/${id}`);\n    data = [...data, newTutorial.data.tutorial];\n    return data;\n  }, []);\n};\nexport const fetchAllTutorials = async () => {\n  return await axios.get(`${BASE_URL}/tutorial`);\n};\nexport const signOutUserFromDatabase = async () => {\n  return await axios.get(`${BASE_URL}/signout`);\n};\nexport const useUser = () => {\n  _s();\n\n  return useSelector(selectUser).user;\n};\n\n_s(useUser, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SignIn\");\n$RefreshReg$(_c2, \"Register\");","map":{"version":3,"sources":["/Users/kushagrapathak/Documents/Web Projs/LetsHPC/letshpcjs/packages/app/src/services/services.jsx"],"names":["useSelector","selectUser","axios","_reduce","BASE_URL","validateEmail","email","re","test","String","toLowerCase","SignIn","credentials","userName","password","status","result","post","user","data","message","Register","details","firstName","lastName","cpass","slice","length","updateUserProfile","fetchTutorialByIds","tutorialIds","_","id","newTutorial","get","tutorial","fetchAllTutorials","signOutUserFromDatabase","useUser"],"mappings":"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","sourcesContent":["import { useSelector } from 'react-redux'\nimport { selectUser } from '../slices/userSlice'\nimport axios from 'axios'\nimport _reduce from 'lodash/reduce'\n\nconst BASE_URL = 'http://localhost:8000/api'\n// const BASE_URL = 'http://192.168.1.16:8000/api'\n\nfunction validateEmail(email) {\n\tconst re =\n\t\t/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n\treturn re.test(String(email).toLowerCase())\n}\n\nexport const SignIn = async (credentials) => {\n\tconst { userName, password } = credentials\n\n\tif (userName === '') return { status: 'Please enter your username' }\n\tif (password === '') return { status: 'Password is incorrect' }\n\n\tconst result = await axios.post(`${BASE_URL}/signin`, credentials)\n\treturn { user: result.data.user, status: result.data.message }\n}\n\nexport const Register = async (details) => {\n\tconst { userName, email, firstName, lastName, password, cpass } = details\n\n\tif (userName === '') return { status: 'Please enter a username' }\n\tif (firstName === '') return { status: 'Please enter a first name' }\n\tif (lastName === '') return { status: 'Please enter a last name' }\n\tif (\n\t\temail === '' ||\n\t\t!validateEmail(email) ||\n\t\temail.slice(9) !== '@daiict.ac.in'\n\t)\n\t\treturn { status: 'Please enter valid DAIICT email' }\n\tif (password === '' && password.length < 6)\n\t\treturn { status: 'Password should at least be of 6 letters' }\n\tif (password !== cpass)\n\t\treturn { status: \"Confirm password and password don't match\" }\n\n\tconst user = {\n\t\temail: email,\n\t\tfirstName: firstName,\n\t\tlastName: lastName,\n\t\tuserName: userName,\n\t\tpassword: password\n\t}\n\n\tconst result = await axios.post(`${BASE_URL}/signup`, user)\n\treturn { user: result.data.user, status: result.data.message }\n}\n\nexport const updateUserProfile = async (user) => {\n\treturn await axios.post(`${BASE_URL}/updateProfile`, user)\n}\n\nexport const fetchTutorialByIds = async (tutorialIds) => {\n\tlet data = []\n\treturn await _reduce(\n\t\ttutorialIds,\n\t\tasync (_, id) => {\n\t\t\tconst newTutorial = await axios.get(`${BASE_URL}/tutorial/${id}`)\n\t\t\tdata = [...data, newTutorial.data.tutorial]\n\t\t\treturn data\n\t\t},\n\t\t[]\n\t)\n}\n\nexport const fetchAllTutorials = async () => {\n\treturn await axios.get(`${BASE_URL}/tutorial`)\n}\n\nexport const signOutUserFromDatabase = async () => {\n\treturn await axios.get(`${BASE_URL}/signout`)\n}\n\nexport const useUser = () => {\n\treturn useSelector(selectUser).user\n}\n"]},"metadata":{},"sourceType":"module"}