{"ast":null,"code":"var _jsxFileName = \"/Users/kushagrapathak/Documents/Web Projs/LetsHPC/letshpcjs/packages/app/src/pages/Dashboard/ReportGenerationPage/components/Report/Report.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport SaveIcon from '@material-ui/icons/Save';\nimport { IconButton } from '@material-ui/core';\nimport './Report.css';\nimport _map from 'lodash/map';\nimport TextEditor from './Texteditor';\nimport { updateUserProfile } from '../../../../../services/services';\nimport { useDispatch } from 'react-redux';\nimport { setUser } from '../../../../../slices/userSlice';\nimport Button from '@material-ui/core/Button';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Report({\n  user,\n  func\n}) {\n  _s();\n\n  const [Class, setClass] = React.useState('report__page');\n  const [Images, setImages] = React.useState([]);\n  const [reportData, setReportData] = React.useState();\n  const dispatch = useDispatch();\n\n  const notify = () => {\n    toast.success('Changes saved!', {\n      position: toast.POSITION.TOP_RIGHT\n    });\n  };\n\n  const saveOnMongo = async () => {\n    const res = await updateUserProfile({ ...user,\n      reportDoc: reportData\n    });\n    dispatch(setUser({\n      user: res.data.user\n    }));\n    notify();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: Class,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      id: \"close_icon\",\n      onClick: () => {\n        setClass('report__page__down');\n        setTimeout(() => {\n          func(false);\n        }, 500);\n      },\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      id: \"close_icon__save\",\n      onClick: async () => {\n        await saveOnMongo();\n      },\n      children: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"recent__plots\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"header__side\",\n        children: \"Generated Plots\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this), _map(user === null || user === void 0 ? void 0 : user.savedPlots, (item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          setImages([...Images, item.imageURL]);\n        },\n        class: \"plot\",\n        id: \"plot__side\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.imageURL,\n          alt: \"\",\n          style: {\n            backgroundColor: 'white'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Figure \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: new Date(item.createDate).toString().slice(0, 24)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 6\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"paper__show\",\n      children: /*#__PURE__*/_jsxDEV(TextEditor, {\n        initialData: user.reportDoc,\n        saveReport: setReportData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Report, \"9gI2utFeyPH00Bd13Ng0rXkKyjs=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Report;\nexport default _c2 = /*#__PURE__*/React.memo(Report);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Report\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/kushagrapathak/Documents/Web Projs/LetsHPC/letshpcjs/packages/app/src/pages/Dashboard/ReportGenerationPage/components/Report/Report.jsx"],"names":["React","SaveIcon","IconButton","_map","TextEditor","updateUserProfile","useDispatch","setUser","Button","ToastContainer","toast","Report","user","func","Class","setClass","useState","Images","setImages","reportData","setReportData","dispatch","notify","success","position","POSITION","TOP_RIGHT","saveOnMongo","res","reportDoc","data","setTimeout","savedPlots","item","index","imageURL","backgroundColor","Date","createDate","toString","slice","memo"],"mappings":"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","sourcesContent":["import React from 'react'\nimport SaveIcon from '@material-ui/icons/Save'\nimport { IconButton } from '@material-ui/core'\nimport './Report.css'\nimport _map from 'lodash/map'\nimport TextEditor from './Texteditor'\nimport { updateUserProfile } from '../../../../../services/services'\nimport { useDispatch } from 'react-redux'\nimport { setUser } from '../../../../../slices/userSlice'\nimport Button from '@material-ui/core/Button'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { ToastContainer, toast } from 'react-toastify'\n\nfunction Report({ user, func }) {\n\tconst [Class, setClass] = React.useState('report__page')\n\tconst [Images, setImages] = React.useState([])\n\tconst [reportData, setReportData] = React.useState()\n\tconst dispatch = useDispatch()\n\n\tconst notify = () => {\n\t\ttoast.success('Changes saved!', {\n\t\t\tposition: toast.POSITION.TOP_RIGHT\n\t\t})\n\t}\n\n\tconst saveOnMongo = async () => {\n\t\tconst res = await updateUserProfile({\n\t\t\t...user,\n\t\t\treportDoc: reportData\n\t\t})\n\t\tdispatch(setUser({ user: res.data.user }))\n\t\tnotify()\n\t}\n\n\treturn (\n\t\t<div class={Class}>\n\t\t\t<Button\n\t\t\t\tid='close_icon'\n\t\t\t\tonClick={() => {\n\t\t\t\t\tsetClass('report__page__down')\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tfunc(false)\n\t\t\t\t\t}, 500)\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tClose\n\t\t\t</Button>\n\t\t\t<IconButton\n\t\t\t\tid='close_icon__save'\n\t\t\t\tonClick={async () => {\n\t\t\t\t\tawait saveOnMongo()\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<SaveIcon />\n\t\t\t</IconButton>\n\t\t\t<div class='recent__plots'>\n\t\t\t\t<h2 className='header__side'>Generated Plots</h2>\n\t\t\t\t{_map(user?.savedPlots, (item, index) => (\n\t\t\t\t\t<div\n\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetImages([...Images, item.imageURL])\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclass='plot'\n\t\t\t\t\t\tid='plot__side'\n\t\t\t\t\t>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={item.imageURL}\n\t\t\t\t\t\t\talt=''\n\t\t\t\t\t\t\tstyle={{ backgroundColor: 'white' }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<h2>Figure {index + 1}</h2>\n\t\t\t\t\t\t<p>{new Date(item.createDate).toString().slice(0, 24)}</p>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<div class='paper__show'>\n\t\t\t\t<TextEditor initialData={user.reportDoc} saveReport={setReportData} />\n\t\t\t</div>\n\t\t\t<ToastContainer />\n\t\t</div>\n\t)\n}\n\nexport default React.memo(Report)\n"]},"metadata":{},"sourceType":"module"}