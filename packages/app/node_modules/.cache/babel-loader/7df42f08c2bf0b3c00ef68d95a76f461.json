{"ast":null,"code":"var _jsxFileName = \"/Users/kushagrapathak/Documents/Web Projs/LetsHPC/letshpcjs/packages/app/src/pages/Dashboard/ReportGenerationPage/components/Report/Texteditor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport Quill from 'quill';\nimport 'quill/dist/quill.snow.css';\nimport './Texteditor.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TOOLBAR_OPTIONS = [[{\n  header: [1, 2, 3, 4, 5, 6, false]\n}], [{\n  font: []\n}], [{\n  align: []\n}], ['bold', 'italic', 'underline', 'strike'], [{\n  color: []\n}, {\n  background: []\n}], ['image', 'blockquote', 'code-block'], [{\n  list: 'ordered'\n}, {\n  list: 'bullet'\n}], [{\n  script: 'sub'\n}, {\n  script: 'super'\n}], [{\n  indent: '-1'\n}, {\n  indent: '+1'\n}], ['clean']];\nexport default function TextEditor(props) {\n  _s();\n\n  const {\n    saveReport,\n    initialData\n  } = props;\n  const [quill, setQuill] = useState();\n  const sendData = useCallback(() => {\n    saveReport(quill.getContents());\n  }, [saveReport, quill]);\n  useEffect(() => {\n    if (quill == null) return;\n\n    if (initialData) {\n      quill.setContents(initialData.ops);\n    } else {\n      quill.setContents([{\n        insert: ''\n      }]);\n    }\n\n    quill.on('text-change', () => sendData());\n    quill.enable();\n    return () => {\n      quill.off('text-change', () => console.log('Quill Says Bye'));\n    };\n  }, [quill, initialData, sendData]);\n  const wrapperRef = useCallback(wrapper => {\n    if (wrapper == null) return;\n    wrapper.innerHTML = '';\n    const editor = document.createElement('div');\n    wrapper.append(editor);\n    const q = new Quill(editor, {\n      theme: 'snow',\n      modules: {\n        toolbar: TOOLBAR_OPTIONS\n      }\n    });\n    q.disable();\n    q.setText('Loading...');\n    setQuill(q);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    ref: wrapperRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TextEditor, \"Rg+dVEn/7mTOxmJaIbU6KXjxDYI=\");\n\n_c = TextEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextEditor\");","map":{"version":3,"sources":["/Users/kushagrapathak/Documents/Web Projs/LetsHPC/letshpcjs/packages/app/src/pages/Dashboard/ReportGenerationPage/components/Report/Texteditor.js"],"names":["React","useEffect","useState","useCallback","Quill","TOOLBAR_OPTIONS","header","font","align","color","background","list","script","indent","TextEditor","props","saveReport","initialData","quill","setQuill","sendData","getContents","setContents","ops","insert","on","enable","off","console","log","wrapperRef","wrapper","innerHTML","editor","document","createElement","append","q","theme","modules","toolbar","disable","setText"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react'\nimport Quill from 'quill'\nimport 'quill/dist/quill.snow.css'\nimport './Texteditor.css'\n\nconst TOOLBAR_OPTIONS = [\n\t[{ header: [1, 2, 3, 4, 5, 6, false] }],\n\t[{ font: [] }],\n\t[{ align: [] }],\n\t['bold', 'italic', 'underline', 'strike'],\n\t[{ color: [] }, { background: [] }],\n\t['image', 'blockquote', 'code-block'],\n\t[{ list: 'ordered' }, { list: 'bullet' }],\n\t[{ script: 'sub' }, { script: 'super' }],\n\t[{ indent: '-1' }, { indent: '+1' }],\n\t['clean']\n]\n\nexport default function TextEditor(props) {\n\tconst { saveReport, initialData } = props\n\n\tconst [quill, setQuill] = useState()\n\n\tconst sendData = useCallback(() => {\n\t\tsaveReport(quill.getContents())\n\t}, [saveReport, quill])\n\n\tuseEffect(() => {\n\t\tif (quill == null) return\n\t\tif (initialData) {\n\t\t\tquill.setContents(initialData.ops)\n\t\t} else {\n\t\t\tquill.setContents([{ insert: '' }])\n\t\t}\n\t\tquill.on('text-change', () => sendData())\n\t\tquill.enable()\n\n\t\treturn () => {\n\t\t\tquill.off('text-change', () => console.log('Quill Says Bye'))\n\t\t}\n\t}, [quill, initialData, sendData])\n\n\tconst wrapperRef = useCallback((wrapper) => {\n\t\tif (wrapper == null) return\n\n\t\twrapper.innerHTML = ''\n\t\tconst editor = document.createElement('div')\n\t\twrapper.append(editor)\n\t\tconst q = new Quill(editor, {\n\t\t\ttheme: 'snow',\n\t\t\tmodules: { toolbar: TOOLBAR_OPTIONS }\n\t\t})\n\n\t\tq.disable()\n\t\tq.setText('Loading...')\n\t\tsetQuill(q)\n\t}, [])\n\treturn <div className='container' ref={wrapperRef}></div>\n}\n"]},"metadata":{},"sourceType":"module"}