{"ast":null,"code":"var _jsxFileName = \"/Users/kushagrapathak/Documents/Web Projs/LetsHPC/letshpcjs/packages/app/src/pages/Dashboard/DataVisualisationPage/LineGraph.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst graphOptions = {\n  xAxisId: 'Problem Set Size',\n  yAxisId: 'myScale',\n  scales: {\n    myScale: {\n      type: 'logarithmic',\n      title: {\n        display: true,\n        text: 'Execution Time (Logarithmic)'\n      },\n      position: 'left'\n    },\n    'Problem Set Size': {\n      title: {\n        display: true,\n        text: 'Problem set size'\n      },\n      position: 'bottom'\n    }\n  },\n  maintainAspectRatio: false,\n  plugins: [{\n    title: {\n      text: 'Test chart',\n      display: true,\n      font: {\n        size: 20\n      }\n    }\n  }]\n};\n\nconst CreateLineGraph = ({\n  dataset,\n  setImage\n}) => {\n  _s();\n\n  const ref = useRef();\n  return /*#__PURE__*/_jsxDEV(Line, {\n    id: 'chart',\n    data: dataset,\n    ref: ref,\n    height: \"100%\",\n    options: { ...graphOptions,\n      animation: {\n        onComplete: () => {\n          setTimeout(() => setImage(() => {\n            var _ref$current;\n\n            return (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.toBase64Image();\n          }), 100);\n        }\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }, this);\n};\n\n_s(CreateLineGraph, \"QMBuJFIdzLIeqBcFwhMf246mjOM=\");\n\n_c = CreateLineGraph;\nexport default _c2 = /*#__PURE__*/React.memo(CreateLineGraph);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CreateLineGraph\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/kushagrapathak/Documents/Web Projs/LetsHPC/letshpcjs/packages/app/src/pages/Dashboard/DataVisualisationPage/LineGraph.jsx"],"names":["React","useRef","Line","graphOptions","xAxisId","yAxisId","scales","myScale","type","title","display","text","position","maintainAspectRatio","plugins","font","size","CreateLineGraph","dataset","setImage","ref","animation","onComplete","setTimeout","current","toBase64Image","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,OAAO,EAAE,kBADW;AAEpBC,EAAAA,OAAO,EAAE,SAFW;AAGpBC,EAAAA,MAAM,EAAE;AACPC,IAAAA,OAAO,EAAE;AACRC,MAAAA,IAAI,EAAE,aADE;AAERC,MAAAA,KAAK,EAAE;AACNC,QAAAA,OAAO,EAAE,IADH;AAENC,QAAAA,IAAI,EAAE;AAFA,OAFC;AAMRC,MAAAA,QAAQ,EAAE;AANF,KADF;AASP,wBAAoB;AACnBH,MAAAA,KAAK,EAAE;AACNC,QAAAA,OAAO,EAAE,IADH;AAENC,QAAAA,IAAI,EAAE;AAFA,OADY;AAKnBC,MAAAA,QAAQ,EAAE;AALS;AATb,GAHY;AAoBpBC,EAAAA,mBAAmB,EAAE,KApBD;AAqBpBC,EAAAA,OAAO,EAAE,CACR;AACCL,IAAAA,KAAK,EAAE;AACNE,MAAAA,IAAI,EAAE,YADA;AAEND,MAAAA,OAAO,EAAE,IAFH;AAGNK,MAAAA,IAAI,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR;AAHA;AADR,GADQ;AArBW,CAArB;;AAgCA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAA2B;AAAA;;AAClD,QAAMC,GAAG,GAAGnB,MAAM,EAAlB;AAEA,sBACC,QAAC,IAAD;AACC,IAAA,EAAE,EAAE,OADL;AAEC,IAAA,IAAI,EAAEiB,OAFP;AAGC,IAAA,GAAG,EAAEE,GAHN;AAIC,IAAA,MAAM,EAAC,MAJR;AAKC,IAAA,OAAO,EAAE,EACR,GAAGjB,YADK;AAERkB,MAAAA,SAAS,EAAE;AACVC,QAAAA,UAAU,EAAE,MAAM;AACjBC,UAAAA,UAAU,CAAC,MAAMJ,QAAQ,CAAC;AAAA;;AAAA,mCAAMC,GAAG,CAACI,OAAV,iDAAM,aAAaC,aAAb,EAAN;AAAA,WAAD,CAAf,EAAqD,GAArD,CAAV;AACA;AAHS;AAFH;AALV;AAAA;AAAA;AAAA;AAAA,UADD;AAgBA,CAnBD;;GAAMR,e;;KAAAA,e;AAqBN,kCAAejB,KAAK,CAAC0B,IAAN,CAAWT,eAAX,CAAf","sourcesContent":["import React, { useRef } from 'react'\nimport { Line } from 'react-chartjs-2'\n\nconst graphOptions = {\n\txAxisId: 'Problem Set Size',\n\tyAxisId: 'myScale',\n\tscales: {\n\t\tmyScale: {\n\t\t\ttype: 'logarithmic',\n\t\t\ttitle: {\n\t\t\t\tdisplay: true,\n\t\t\t\ttext: 'Execution Time (Logarithmic)'\n\t\t\t},\n\t\t\tposition: 'left'\n\t\t},\n\t\t'Problem Set Size': {\n\t\t\ttitle: {\n\t\t\t\tdisplay: true,\n\t\t\t\ttext: 'Problem set size'\n\t\t\t},\n\t\t\tposition: 'bottom'\n\t\t}\n\t},\n\tmaintainAspectRatio: false,\n\tplugins: [\n\t\t{\n\t\t\ttitle: {\n\t\t\t\ttext: 'Test chart',\n\t\t\t\tdisplay: true,\n\t\t\t\tfont: { size: 20 }\n\t\t\t}\n\t\t}\n\t]\n}\n\nconst CreateLineGraph = ({ dataset, setImage }) => {\n\tconst ref = useRef()\n\n\treturn (\n\t\t<Line\n\t\t\tid={'chart'}\n\t\t\tdata={dataset}\n\t\t\tref={ref}\n\t\t\theight='100%'\n\t\t\toptions={{\n\t\t\t\t...graphOptions,\n\t\t\t\tanimation: {\n\t\t\t\t\tonComplete: () => {\n\t\t\t\t\t\tsetTimeout(() => setImage(() => ref.current?.toBase64Image()), 100)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}}\n\t\t/>\n\t)\n}\n\nexport default React.memo(CreateLineGraph)\n"]},"metadata":{},"sourceType":"module"}