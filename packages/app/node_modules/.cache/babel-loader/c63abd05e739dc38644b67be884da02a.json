{"ast":null,"code":"var _jsxFileName = \"/Users/kushagrapathak/Documents/Web Projs/LetsHPC/letshpcjs/packages/app/src/pages/Home/Concept Matter/Concept.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { useHistory } from 'react-router-dom';\nimport Chip from '@material-ui/core/Chip';\nimport BookmarkBorderRoundedIcon from '@material-ui/icons/BookmarkBorderRounded';\nimport BookmarkRoundedIcon from '@material-ui/icons/BookmarkRounded';\nimport { CircularProgress } from '@material-ui/core';\nimport { updateUserProfile, useUser } from '../../../services/services';\nimport _find from 'lodash/find';\nimport { useDispatch } from 'react-redux';\nimport { setUser } from '../../../slices/userSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Concept(props) {\n  _s();\n\n  const user = useUser();\n  const history = useHistory();\n  const {\n    title,\n    theory,\n    level\n  } = props.tutorial;\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n  const [clicked, setClicked] = useState(() => _find(user === null || user === void 0 ? void 0 : user.savedTutorials, {\n    tutorial: props.tutorial\n  }));\n  const chipColor = {\n    beginner: 'green',\n    medium: 'yellow',\n    advance: '#eb4034'\n  };\n  const navigateToTutorial = useCallback(() => history.push('/tutorials', {\n    details: JSON.stringify(props.tutorial)\n  }), [history, props.tutorial]);\n  const saveTutorial = useCallback(async () => {\n    setClicked(true);\n    setLoading(true);\n    const updateUser = { ...user,\n      savedTutorials: [...user.savedTutorials, {\n        tutorial: props.tutorial\n      }]\n    };\n    await updateUserProfile(updateUser);\n    dispatch(setUser({\n      user: updateUser\n    }));\n    setLoading(false);\n  }, [setLoading, dispatch, props.tutorial, user]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"concept__box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: 'rgba(0,150,255)',\n        marginBottom: 10\n      },\n      children: [title.slice(0, 30), \" \", title.length > 30 ? '...' : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Chip, {\n      variant: \"outlined\",\n      size: \"small\",\n      label: level[0].toUpperCase() + level.slice(1),\n      style: {\n        color: chipColor[level],\n        borderColor: chipColor[level],\n        maxWidth: '90px',\n        marginBottom: 5\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      dangerouslySetInnerHTML: {\n        __html: `${theory.slice(0, 100)}...`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info\",\n      children: [user && user.role === 'Student' && (loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 30\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this) : clicked ? /*#__PURE__*/_jsxDEV(BookmarkRoundedIcon, {\n        style: {\n          cursor: 'pointer',\n          color: 'rgba(255,255,255,0.3)'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this) : /*#__PURE__*/_jsxDEV(BookmarkBorderRoundedIcon, {\n        onClick: saveTutorial,\n        style: {\n          cursor: 'pointer',\n          color: 'rgba(255,255,255,0.3)'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: navigateToTutorial,\n        style: {\n          textTransform: 'capitalize',\n          color: 'white',\n          background: 'green',\n          width: '100%'\n        },\n        children: \"Go to tutorial\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Concept, \"9EldZ9Army6AlD26vMJAH3iBvTc=\", false, function () {\n  return [useUser, useHistory, useDispatch];\n});\n\n_c = Concept;\nexport default _c2 = /*#__PURE__*/React.memo(Concept);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Concept\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/kushagrapathak/Documents/Web Projs/LetsHPC/letshpcjs/packages/app/src/pages/Home/Concept Matter/Concept.js"],"names":["React","useCallback","useState","Button","useHistory","Chip","BookmarkBorderRoundedIcon","BookmarkRoundedIcon","CircularProgress","updateUserProfile","useUser","_find","useDispatch","setUser","Concept","props","user","history","title","theory","level","tutorial","dispatch","loading","setLoading","clicked","setClicked","savedTutorials","chipColor","beginner","medium","advance","navigateToTutorial","push","details","JSON","stringify","saveTutorial","updateUser","color","marginBottom","slice","length","toUpperCase","borderColor","maxWidth","__html","role","cursor","textTransform","background","width","memo"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react'\nimport Button from '@material-ui/core/Button'\nimport { useHistory } from 'react-router-dom'\nimport Chip from '@material-ui/core/Chip'\nimport BookmarkBorderRoundedIcon from '@material-ui/icons/BookmarkBorderRounded'\nimport BookmarkRoundedIcon from '@material-ui/icons/BookmarkRounded'\nimport { CircularProgress } from '@material-ui/core'\nimport { updateUserProfile, useUser } from '../../../services/services'\nimport _find from 'lodash/find'\nimport { useDispatch } from 'react-redux'\nimport { setUser } from '../../../slices/userSlice'\n\nfunction Concept(props) {\n\tconst user = useUser()\n\tconst history = useHistory()\n\tconst { title, theory, level } = props.tutorial\n\tconst dispatch = useDispatch()\n\n\tconst [loading, setLoading] = useState(false)\n\tconst [clicked, setClicked] = useState(() =>\n\t\t_find(user?.savedTutorials, { tutorial: props.tutorial })\n\t)\n\n\tconst chipColor = {\n\t\tbeginner: 'green',\n\t\tmedium: 'yellow',\n\t\tadvance: '#eb4034'\n\t}\n\n\tconst navigateToTutorial = useCallback(\n\t\t() =>\n\t\t\thistory.push('/tutorials', { details: JSON.stringify(props.tutorial) }),\n\t\t[history, props.tutorial]\n\t)\n\n\tconst saveTutorial = useCallback(async () => {\n\t\tsetClicked(true)\n\t\tsetLoading(true)\n\t\tconst updateUser = {\n\t\t\t...user,\n\t\t\tsavedTutorials: [...user.savedTutorials, { tutorial: props.tutorial }]\n\t\t}\n\t\tawait updateUserProfile(updateUser)\n\t\tdispatch(setUser({ user: updateUser }))\n\t\tsetLoading(false)\n\t}, [setLoading, dispatch, props.tutorial, user])\n\n\treturn (\n\t\t<div className='concept__box'>\n\t\t\t<h2 style={{ color: 'rgba(0,150,255)', marginBottom: 10 }}>\n\t\t\t\t{title.slice(0, 30)} {title.length > 30 ? '...' : null}\n\t\t\t</h2>\n\t\t\t<Chip\n\t\t\t\tvariant='outlined'\n\t\t\t\tsize='small'\n\t\t\t\tlabel={level[0].toUpperCase() + level.slice(1)}\n\t\t\t\tstyle={{\n\t\t\t\t\tcolor: chipColor[level],\n\t\t\t\t\tborderColor: chipColor[level],\n\t\t\t\t\tmaxWidth: '90px',\n\t\t\t\t\tmarginBottom: 5\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<p dangerouslySetInnerHTML={{ __html: `${theory.slice(0, 100)}...` }} />\n\t\t\t<div className='info'>\n\t\t\t\t{user &&\n\t\t\t\t\tuser.role === 'Student' &&\n\t\t\t\t\t(loading ? (\n\t\t\t\t\t\t<CircularProgress size={30} />\n\t\t\t\t\t) : clicked ? (\n\t\t\t\t\t\t<BookmarkRoundedIcon\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tcursor: 'pointer',\n\t\t\t\t\t\t\t\tcolor: 'rgba(255,255,255,0.3)'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<BookmarkBorderRoundedIcon\n\t\t\t\t\t\t\tonClick={saveTutorial}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tcursor: 'pointer',\n\t\t\t\t\t\t\t\tcolor: 'rgba(255,255,255,0.3)'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t<Button\n\t\t\t\t\tonClick={navigateToTutorial}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\ttextTransform: 'capitalize',\n\t\t\t\t\t\tcolor: 'white',\n\t\t\t\t\t\tbackground: 'green',\n\t\t\t\t\t\twidth: '100%'\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tGo to tutorial\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default React.memo(Concept)\n"]},"metadata":{},"sourceType":"module"}