{"ast":null,"code":"import userReducer from '../slices/userSlice';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { combineReducers, createStore } from 'redux';\nimport { applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nconst persistConfig = {\n  key: 'root',\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, combineReducers({\n  user: userReducer\n}));\nconst store = createStore(persistedReducer, applyMiddleware(thunk));\nconst persistor = persistStore(store);\nexport { persistor, store };","map":{"version":3,"sources":["/Users/kushagrapathak/Documents/Web Projs/LetsHPC/letshpcjs/packages/app/src/store/store.jsx"],"names":["userReducer","persistStore","persistReducer","storage","combineReducers","createStore","applyMiddleware","thunk","persistConfig","key","persistedReducer","user","store","persistor"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,qBAAxB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,MAAMC,aAAa,GAAG;AACrBC,EAAAA,GAAG,EAAE,MADgB;AAErBN,EAAAA;AAFqB,CAAtB;AAKA,MAAMO,gBAAgB,GAAGR,cAAc,CACtCM,aADsC,EAEtCJ,eAAe,CAAC;AAAEO,EAAAA,IAAI,EAAEX;AAAR,CAAD,CAFuB,CAAvC;AAKA,MAAMY,KAAK,GAAGP,WAAW,CAACK,gBAAD,EAAmBJ,eAAe,CAACC,KAAD,CAAlC,CAAzB;AAEA,MAAMM,SAAS,GAAGZ,YAAY,CAACW,KAAD,CAA9B;AAEA,SAASC,SAAT,EAAoBD,KAApB","sourcesContent":["import userReducer from '../slices/userSlice'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { combineReducers, createStore } from 'redux'\nimport { applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\n\nconst persistConfig = {\n\tkey: 'root',\n\tstorage\n}\n\nconst persistedReducer = persistReducer(\n\tpersistConfig,\n\tcombineReducers({ user: userReducer })\n)\n\nconst store = createStore(persistedReducer, applyMiddleware(thunk))\n\nconst persistor = persistStore(store)\n\nexport { persistor, store }\n"]},"metadata":{},"sourceType":"module"}