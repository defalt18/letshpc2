{"ast":null,"code":"var _jsxFileName = \"/Users/kushagrapathak/Documents/Web Projs/LetsHPC/letshpcjs/packages/app/src/pages/AdminDashboard/CreateTutorials/CreateTutorials.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useMemo, useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nimport './CreateTutorial.css';\nimport { createTutorial } from '../../../services/admin-services';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { EditorState } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { convertToHTML } from 'draft-convert';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  textfields: {\n    border: '#22272d',\n    '& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline': {\n      borderColor: '#2d333b'\n    },\n    '&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline': {\n      borderColor: '#2d333b'\n    },\n    '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline': {\n      borderColor: '#2d333b'\n    },\n    '& .MuiOutlinedInput-input': {\n      color: 'white'\n    },\n    '&:hover .MuiOutlinedInput-input': {\n      color: 'white'\n    },\n    '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-input': {\n      color: 'white'\n    },\n    '& .MuiInputLabel-outlined': {\n      color: 'white'\n    },\n    '&:hover .MuiInputLabel-outlined': {\n      color: 'white'\n    },\n    '& .MuiInputLabel-outlined.Mui-focused': {\n      color: 'white'\n    }\n  }\n}));\n\nfunction CreateTutorials() {\n  _s();\n\n  const classes = useStyles();\n  const [tutorial, setTutorial] = useState({\n    title: '',\n    theory: '',\n    code: '',\n    level: 'beginner',\n    input: '',\n    output: '',\n    tags: Array,\n    testcases: Array\n  });\n\n  const notify = () => {\n    toast.success('Tutorial added to collection !', {\n      position: toast.POSITION.TOP_RIGHT\n    });\n  };\n\n  const issueAddition = useCallback(async () => {\n    await createTutorial(tutorial);\n    notify();\n  }, [tutorial]);\n  const handleChange = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setTutorial({ ...tutorial,\n      [name]: value\n    });\n  }, [tutorial, setTutorial]);\n  const initialEditorState = useMemo(() => EditorState.createEmpty(), []);\n  const [editorState, setEditorState] = useState(() => ({\n    theory: initialEditorState,\n    code: initialEditorState,\n    input: initialEditorState,\n    output: initialEditorState\n  }));\n\n  const handleEditorChange = (state, editorName) => {\n    setEditorState({ ...editorState,\n      [editorName]: state\n    });\n    convertContentToHTML(editorName);\n  };\n\n  const convertContentToHTML = editorName => {\n    setTutorial({ ...tutorial,\n      [editorName]: convertToHTML(editorState[editorName].getCurrentContent())\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin__content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create a Tutorial\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create__tutorials\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: 'title',\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Title\",\n        className: \"inputs\",\n        type: \"text\",\n        name: \"title\",\n        onChange: handleChange,\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n        id: \"combo-box-demo\",\n        options: ['beginner', 'medium', 'advance'],\n        value: tutorial.level,\n        onChange: (e, value) => setTutorial({ ...tutorial,\n          level: value\n        }),\n        getOptionLabel: option => option,\n        style: {\n          width: '100%'\n        },\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n          label: \"Level\",\n          name: \"level\",\n          className: classes.textfields,\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Theory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Editor, {\n        editorState: editorState.theory,\n        onEditorStateChange: state => handleEditorChange(state, 'theory'),\n        wrapperClassName: \"wrapper-class\",\n        editorClassName: \"editor-class\",\n        toolbarClassName: \"toolbar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Editor, {\n        editorState: editorState.code,\n        onEditorStateChange: state => handleEditorChange(state, 'code'),\n        wrapperClassName: \"wrapper-class\",\n        editorClassName: \"editor-code-class\",\n        toolbarClassName: \"toolbar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Testcase Details : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Editor, {\n        editorState: editorState.input,\n        onEditorStateChange: state => handleEditorChange(state, 'input'),\n        wrapperClassName: \"wrapper-class\",\n        editorClassName: \"editor-input-class\",\n        toolbarClassName: \"toolbar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Output\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Editor, {\n        editorState: editorState.output,\n        onEditorStateChange: state => handleEditorChange(state, 'output'),\n        wrapperClassName: \"wrapper-class\",\n        editorClassName: \"editor-input-class\",\n        toolbarClassName: \"toolbar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: issueAddition,\n        style: {\n          background: '#2d333b',\n          color: 'white'\n        },\n        children: \"Submit Tutorial\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 3\n  }, this);\n}\n\n_s(CreateTutorials, \"5mdJ/0HQhQ6hqRnaHaOtnGsiOy0=\", false, function () {\n  return [useStyles];\n});\n\n_c = CreateTutorials;\nexport default CreateTutorials;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTutorials\");","map":{"version":3,"sources":["/Users/kushagrapathak/Documents/Web Projs/LetsHPC/letshpcjs/packages/app/src/pages/AdminDashboard/CreateTutorials/CreateTutorials.jsx"],"names":["React","useCallback","useMemo","useState","TextField","Autocomplete","makeStyles","Button","createTutorial","ToastContainer","toast","EditorState","Editor","convertToHTML","useStyles","textfields","border","borderColor","color","CreateTutorials","classes","tutorial","setTutorial","title","theory","code","level","input","output","tags","Array","testcases","notify","success","position","POSITION","TOP_RIGHT","issueAddition","handleChange","e","name","value","target","initialEditorState","createEmpty","editorState","setEditorState","handleEditorChange","state","editorName","convertContentToHTML","getCurrentContent","option","width","params","background"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo, useState } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Button } from '@material-ui/core'\nimport './CreateTutorial.css'\n\nimport { createTutorial } from '../../../services/admin-services'\n\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nimport { EditorState } from 'draft-js'\nimport { Editor } from 'react-draft-wysiwyg'\nimport { convertToHTML } from 'draft-convert'\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\n\nconst useStyles = makeStyles(() => ({\n\ttextfields: {\n\t\tborder: '#22272d',\n\t\t'& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline': {\n\t\t\tborderColor: '#2d333b'\n\t\t},\n\t\t'&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline': {\n\t\t\tborderColor: '#2d333b'\n\t\t},\n\t\t'& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline': {\n\t\t\tborderColor: '#2d333b'\n\t\t},\n\t\t'& .MuiOutlinedInput-input': {\n\t\t\tcolor: 'white'\n\t\t},\n\t\t'&:hover .MuiOutlinedInput-input': {\n\t\t\tcolor: 'white'\n\t\t},\n\t\t'& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-input': {\n\t\t\tcolor: 'white'\n\t\t},\n\t\t'& .MuiInputLabel-outlined': {\n\t\t\tcolor: 'white'\n\t\t},\n\t\t'&:hover .MuiInputLabel-outlined': {\n\t\t\tcolor: 'white'\n\t\t},\n\t\t'& .MuiInputLabel-outlined.Mui-focused': {\n\t\t\tcolor: 'white'\n\t\t}\n\t}\n}))\n\nfunction CreateTutorials() {\n\tconst classes = useStyles()\n\tconst [tutorial, setTutorial] = useState({\n\t\ttitle: '',\n\t\ttheory: '',\n\t\tcode: '',\n\t\tlevel: 'beginner',\n\t\tinput: '',\n\t\toutput: '',\n\t\ttags: Array,\n\t\ttestcases: Array\n\t})\n\n\tconst notify = () => {\n\t\ttoast.success('Tutorial added to collection !', {\n\t\t\tposition: toast.POSITION.TOP_RIGHT\n\t\t})\n\t}\n\n\tconst issueAddition = useCallback(async () => {\n\t\tawait createTutorial(tutorial)\n\t\tnotify()\n\t}, [tutorial])\n\n\tconst handleChange = useCallback(\n\t\t(e) => {\n\t\t\tconst { name, value } = e.target\n\t\t\tsetTutorial({ ...tutorial, [name]: value })\n\t\t},\n\t\t[tutorial, setTutorial]\n\t)\n\n\tconst initialEditorState = useMemo(() => EditorState.createEmpty(), [])\n\n\tconst [editorState, setEditorState] = useState(() => ({\n\t\ttheory: initialEditorState,\n\t\tcode: initialEditorState,\n\t\tinput: initialEditorState,\n\t\toutput: initialEditorState\n\t}))\n\n\tconst handleEditorChange = (state, editorName) => {\n\t\tsetEditorState({ ...editorState, [editorName]: state })\n\t\tconvertContentToHTML(editorName)\n\t}\n\tconst convertContentToHTML = (editorName) => {\n\t\tsetTutorial({\n\t\t\t...tutorial,\n\t\t\t[editorName]: convertToHTML(editorState[editorName].getCurrentContent())\n\t\t})\n\t}\n\n\treturn (\n\t\t<div className='admin__content'>\n\t\t\t<h1>Create a Tutorial</h1>\n\t\t\t<div className='create__tutorials'>\n\t\t\t\t<label htmlFor={'title'}>Title</label>\n\t\t\t\t<input\n\t\t\t\t\tplaceholder='Title'\n\t\t\t\t\tclassName='inputs'\n\t\t\t\t\ttype='text'\n\t\t\t\t\tname='title'\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tid='name'\n\t\t\t\t/>\n\t\t\t\t<Autocomplete\n\t\t\t\t\tid='combo-box-demo'\n\t\t\t\t\toptions={['beginner', 'medium', 'advance']}\n\t\t\t\t\tvalue={tutorial.level}\n\t\t\t\t\tonChange={(e, value) => setTutorial({ ...tutorial, level: value })}\n\t\t\t\t\tgetOptionLabel={(option) => option}\n\t\t\t\t\tstyle={{ width: '100%' }}\n\t\t\t\t\trenderInput={(params) => (\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t{...params}\n\t\t\t\t\t\t\tlabel='Level'\n\t\t\t\t\t\t\tname='level'\n\t\t\t\t\t\t\tclassName={classes.textfields}\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t\t<label>Theory</label>\n\t\t\t\t<Editor\n\t\t\t\t\teditorState={editorState.theory}\n\t\t\t\t\tonEditorStateChange={(state) => handleEditorChange(state, 'theory')}\n\t\t\t\t\twrapperClassName='wrapper-class'\n\t\t\t\t\teditorClassName='editor-class'\n\t\t\t\t\ttoolbarClassName='toolbar'\n\t\t\t\t/>\n\n\t\t\t\t<label>Code</label>\n\t\t\t\t<Editor\n\t\t\t\t\teditorState={editorState.code}\n\t\t\t\t\tonEditorStateChange={(state) => handleEditorChange(state, 'code')}\n\t\t\t\t\twrapperClassName='wrapper-class'\n\t\t\t\t\teditorClassName='editor-code-class'\n\t\t\t\t\ttoolbarClassName='toolbar'\n\t\t\t\t/>\n\t\t\t\t<h3>Testcase Details : </h3>\n\t\t\t\t<label>Input</label>\n\t\t\t\t<Editor\n\t\t\t\t\teditorState={editorState.input}\n\t\t\t\t\tonEditorStateChange={(state) => handleEditorChange(state, 'input')}\n\t\t\t\t\twrapperClassName='wrapper-class'\n\t\t\t\t\teditorClassName='editor-input-class'\n\t\t\t\t\ttoolbarClassName='toolbar'\n\t\t\t\t/>\n\t\t\t\t<label>Output</label>\n\t\t\t\t<Editor\n\t\t\t\t\teditorState={editorState.output}\n\t\t\t\t\tonEditorStateChange={(state) => handleEditorChange(state, 'output')}\n\t\t\t\t\twrapperClassName='wrapper-class'\n\t\t\t\t\teditorClassName='editor-input-class'\n\t\t\t\t\ttoolbarClassName='toolbar'\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={issueAddition}\n\t\t\t\t\tstyle={{ background: '#2d333b', color: 'white' }}\n\t\t\t\t>\n\t\t\t\t\tSubmit Tutorial\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t\t<ToastContainer />\n\t\t</div>\n\t)\n}\n\nexport default CreateTutorials\n"]},"metadata":{},"sourceType":"module"}